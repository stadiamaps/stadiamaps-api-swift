//
// AddressComponentsV2.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

/** Structured address components. */
public struct AddressComponentsV2: Codable, JSONEncodable, Hashable {
    /** The cross street address component (rarely used). */
    public var crossStreet: String?
    /** The house / building number.  Note that, despite the name, this is not strictly numeric. Values such as 30-1 and 11A may be valid building/house numbers in some areas. */
    public var number: String?
    /** The postal code. */
    public var postalCode: String?
    /** The street component of the address. */
    public var street: String?
    /** The unit number (where available). */
    public var unit: String?

    public init(crossStreet: String? = nil, number: String? = nil, postalCode: String? = nil, street: String? = nil, unit: String? = nil) {
        self.crossStreet = crossStreet
        self.number = number
        self.postalCode = postalCode
        self.street = street
        self.unit = unit
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case crossStreet = "cross_street"
        case number
        case postalCode = "postal_code"
        case street
        case unit
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(crossStreet, forKey: .crossStreet)
        try container.encodeIfPresent(number, forKey: .number)
        try container.encodeIfPresent(postalCode, forKey: .postalCode)
        try container.encodeIfPresent(street, forKey: .street)
        try container.encodeIfPresent(unit, forKey: .unit)
    }
}
