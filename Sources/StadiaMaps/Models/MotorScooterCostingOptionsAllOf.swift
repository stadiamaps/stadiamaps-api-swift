//
// MotorScooterCostingOptionsAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MotorScooterCostingOptionsAllOf: Codable, JSONEncodable, Hashable {

    static let usePrimaryRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: false, maximum: 1, exclusiveMaximum: false, multipleOf: nil)
    static let useHillsRule = NumericRule<Double>(minimum: 0, exclusiveMinimum: false, maximum: 1, exclusiveMaximum: false, multipleOf: nil)
    /** A measure of willingness to use primary roads. Values near 0 attempt to avoid primary roads and stay on roads with lower speeds, and values near 1 indicate the rider is more comfortable on these roads. */
    public var usePrimary: Double? = 0.5
    /** A measure of willingness to take tackle hills. Values near 0 attempt to avoid hills and steeper grades even if it means a longer route, and values near 1 indicates that the rider does not fear them. Note that as some routes may be impossible without hills, 0 does not guarantee avoidance of them. */
    public var useHills: Double? = 0.5

    public init(usePrimary: Double? = 0.5, useHills: Double? = 0.5) {
        self.usePrimary = usePrimary
        self.useHills = useHills
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case usePrimary = "use_primary"
        case useHills = "use_hills"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(usePrimary, forKey: .usePrimary)
        try container.encodeIfPresent(useHills, forKey: .useHills)
    }
}

