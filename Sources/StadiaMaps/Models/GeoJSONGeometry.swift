//
// GeoJSONGeometry.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public enum GeoJSONGeometry: Codable, JSONEncodable, Hashable {
    case typeGeoJSONLineString(GeoJSONLineString)
    case typeGeoJSONPoint(GeoJSONPoint)
    case typeGeoJSONPolygon(GeoJSONPolygon)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case let .typeGeoJSONLineString(value):
            try container.encode(value)
        case let .typeGeoJSONPoint(value):
            try container.encode(value)
        case let .typeGeoJSONPolygon(value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(GeoJSONLineString.self) {
            self = .typeGeoJSONLineString(value)
        } else if let value = try? container.decode(GeoJSONPoint.self) {
            self = .typeGeoJSONPoint(value)
        } else if let value = try? container.decode(GeoJSONPolygon.self) {
            self = .typeGeoJSONPolygon(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of GeoJSONGeometry"))
        }
    }
}
