//
// GeocodeResponseEnvelopePropertiesV2.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

/** The GeoJSON response envelope.  This is parameterized over the feature properties type to allow for changes between versions. */
public struct GeocodeResponseEnvelopePropertiesV2: Codable, JSONEncodable, Hashable {
    public static let bboxRule = ArrayRule(minItems: 4, maxItems: 4, uniqueItems: false)
    /** The geographic bounding box covering all features in the result set.  This is empty for autocomplete results. */
    public var bbox: [Double]?
    public var features: [FeaturePropertiesV2]
    public var geocoding: GeocodingMeta
    /** The GeoJSON object type as defined in RFC 7946.  NOTE: This is always FeatureCollection, as the response envelope is designed to hold multiple results. */
    public var type: String

    public init(bbox: [Double]? = nil, features: [FeaturePropertiesV2], geocoding: GeocodingMeta, type: String) {
        self.bbox = bbox
        self.features = features
        self.geocoding = geocoding
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bbox
        case features
        case geocoding
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(bbox, forKey: .bbox)
        try container.encode(features, forKey: .features)
        try container.encode(geocoding, forKey: .geocoding)
        try container.encode(type, forKey: .type)
    }
}
