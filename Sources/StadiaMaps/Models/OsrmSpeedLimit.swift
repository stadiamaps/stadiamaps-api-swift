//
// OsrmSpeedLimit.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

/** The speed limit between the pair of coordinates. */
public struct OsrmSpeedLimit: Codable, JSONEncodable, Hashable {
    public enum Unit: String, Codable, CaseIterable {
        case kmSlashH = "km/h"
        case mph
    }

    public var speed: Int?
    /** The unit of measure for the speed. Always included if speed is present. */
    public var unit: Unit?
    /** True if the speed limit is not known. */
    public var unknown: Bool?
    /** True if there is no explicit speed limit (ex: some Autobahn sections) */
    public var _none: Bool?

    public init(speed: Int? = nil, unit: Unit? = nil, unknown: Bool? = nil, _none: Bool? = nil) {
        self.speed = speed
        self.unit = unit
        self.unknown = unknown
        self._none = _none
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case speed
        case unit
        case unknown
        case _none = "none"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(speed, forKey: .speed)
        try container.encodeIfPresent(unit, forKey: .unit)
        try container.encodeIfPresent(unknown, forKey: .unknown)
        try container.encodeIfPresent(_none, forKey: ._none)
    }
}
