//
// HighwayClassification.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct HighwayClassification: Codable, JSONEncodable, Hashable {

    public enum Surface: String, Codable, CaseIterable {
        case pavedSmooth = "paved_smooth"
        case paved = "paved"
        case pavedRough = "paved_rough"
        case compacted = "compacted"
        case dirt = "dirt"
        case gravel = "gravel"
        case path = "path"
        case impassable = "impassable"
    }
    public enum Use: String, Codable, CaseIterable {
        case road = "road"
        case ramp = "ramp"
        case turnChannel = "turn_channel"
        case track = "track"
        case driveway = "driveway"
        case alley = "alley"
        case parkingAisle = "parking_aisle"
        case emergencyAccess = "emergency_access"
        case driveThrough = "drive_through"
        case culdesac = "culdesac"
        case livingStreet = "living_street"
        case serviceRoad = "service_road"
        case cycleway = "cycleway"
        case mountainBike = "mountain_bike"
        case sidewalk = "sidewalk"
        case footway = "footway"
        case elevator = "elevator"
        case steps = "steps"
        case escalator = "escalator"
        case path = "path"
        case pedestrian = "pedestrian"
        case bridleway = "bridleway"
        case pedestrianCrossing = "pedestrian_crossing"
        case restArea = "rest_area"
        case serviceArea = "service_area"
        case other = "other"
        case rail = "rail"
        case ferry = "ferry"
        case railFerry = "rail-ferry"
        case bus = "bus"
        case egressConnection = "egress_connection"
        case platformConnnection = "platform_connnection"
        case transitConnection = "transit_connection"
        case construction = "construction"
    }
    public enum Classification: String, Codable, CaseIterable {
        case motorway = "motorway"
        case trunk = "trunk"
        case primary = "primary"
        case secondary = "secondary"
        case tertiary = "tertiary"
        case unclassified = "unclassified"
        case residential = "residential"
        case serviceOther = "service_other"
    }
    /** Is the edge internal to an intersection? */
    public var _internal: Bool?
    /** Is the edge a ramp or turn channel? */
    public var link: Bool?
    /** A representation of the smoothness of the highway. This is used for costing and access checks based on the vehicle type. */
    public var surface: Surface?
    public var use: Use?
    /** The classification/importance of the road/path. Used for a variety of purposes including fallback speed estimation and access for certain vehicle types. */
    public var classification: Classification?

    public init(_internal: Bool? = nil, link: Bool? = nil, surface: Surface? = nil, use: Use? = nil, classification: Classification? = nil) {
        self._internal = _internal
        self.link = link
        self.surface = surface
        self.use = use
        self.classification = classification
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _internal = "internal"
        case link
        case surface
        case use
        case classification
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_internal, forKey: ._internal)
        try container.encodeIfPresent(link, forKey: .link)
        try container.encodeIfPresent(surface, forKey: .surface)
        try container.encodeIfPresent(use, forKey: .use)
        try container.encodeIfPresent(classification, forKey: .classification)
    }
}

