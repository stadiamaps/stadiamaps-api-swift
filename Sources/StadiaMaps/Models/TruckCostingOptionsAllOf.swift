//
// TruckCostingOptionsAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TruckCostingOptionsAllOf: Codable, JSONEncodable, Hashable {

    /** The height of the truck (in meters). */
    public var height: Double? = 4.11
    /** The width of the truck (in meters). */
    public var width: Double? = 2.6
    /** The length of the truck (in meters). */
    public var length: Double? = 21.64
    /** The weight of the truck (in tonnes). */
    public var weight: Double? = 21.77
    /** The axle load of the truck (in tonnes). */
    public var axleLoad: Double? = 9.07
    /** Whether or not the truck is carrying hazardous materials. */
    public var hazmat: Bool? = false

    public init(height: Double? = 4.11, width: Double? = 2.6, length: Double? = 21.64, weight: Double? = 21.77, axleLoad: Double? = 9.07, hazmat: Bool? = false) {
        self.height = height
        self.width = width
        self.length = length
        self.weight = weight
        self.axleLoad = axleLoad
        self.hazmat = hazmat
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case height
        case width
        case length
        case weight
        case axleLoad = "axle_load"
        case hazmat
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(height, forKey: .height)
        try container.encodeIfPresent(width, forKey: .width)
        try container.encodeIfPresent(length, forKey: .length)
        try container.encodeIfPresent(weight, forKey: .weight)
        try container.encodeIfPresent(axleLoad, forKey: .axleLoad)
        try container.encodeIfPresent(hazmat, forKey: .hazmat)
    }
}

